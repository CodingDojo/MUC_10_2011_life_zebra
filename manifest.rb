{:visible_files=>{"cyberdojo.sh"=>{:scroll_left=>"0", :content=>"gmcs -t:library Untitled.cs\nif [ $? -eq 0 ]; then\n  gmcs -t:library -r:Untitled.dll -r:nunit.framework.dll UntitledTest.cs\n  if [ $? -eq 0 ]; then\n    nunit-console -nologo UntitledTest.dll\n  fi\nfi\n\n", :caret_pos=>"0", :scroll_top=>"0"}, "output"=>{:scroll_left=>"0", :content=>"Untitled.cs(5,17): warning CS0649: Field `Game.xBound' is never assigned to, and will always have its default value `0'\nUntitled.cs(6,17): warning CS0649: Field `Game.yBound' is never assigned to, and will always have its default value `0'\nCompilation succeeded - 2 warning(s)\n\nTests run: 0, Failures: 0, Not run: 0, Time: 0.015 seconds\r\n\r\n\r\n", :caret_pos=>"347", :scroll_top=>"0"}, "Untitled.cs"=>{:scroll_left=>"0", :content=>"using System.Collections.Generic;\n\npublic class Game {\n    private int[,] table;\n    private int xBound;\n    private int yBound;\n\n    public Game(int x, int y, List<string> liveCells) {\n        table = new int[x, y];\n\n        foreach(var cell in liveCells) {\n            var coords = cell.Split(new char[] {','});\n\n            table[int.Parse(coords[0]), int.Parse(coords[1])] = 1;\n        }\n    }  \n\n    public int LiveCellsCount() {\n        int count = 0;\n\n        for(int i = 0; i < xBound; i++) {\n            for(int j = 0; j < yBound; j++) {\n                if(table[i,j] == 1) count++;\n            }\n        }\n\n        return count;\n    }\n\n    public void Evolve() {\n        for(int i = 0; i < xBound; i++) {\n            for(int j = 0; j < yBound; j++) {\n                var aliveNeighbours = GetAliveNeighboursCount(i, j);\n                if (aliveNeighbours < 2) {\n                    table[i, j] = 0;\n                } \n            }\n        }\n    }\n\n    public int GetAliveNeighboursCount(int x, int y) {\n        int count = 0;\n\n        count += CheckBoundaries(x-1, y-1);\n        count += CheckBoundaries(x, y-1);\n        count += CheckBoundaries(x-1, y+1);\n        count += CheckBoundaries(x, y-1);\n        count += CheckBoundaries(x, y+1);\n        count += CheckBoundaries(x+1, y-1);\n        count += CheckBoundaries(x-1, y);\n        count += CheckBoundaries(x+1, y+1);\n\n        return count;\n    }\n\n    public int CheckBoundaries(int x, int y) {\n        if(x < 0 || y < 0) {\n            return 0;\n        }\n\n        if(x > xBound || y > yBound) {\n            return 0;\n        }\n\n        return table[x, y];\n    }\n} ", :caret_pos=>"866", :scroll_top=>"317"}, "UntitledTest.cs"=>{:scroll_left=>"0", :content=>"\nusing NUnit.Framework;\nusing System.Collections.Generic;\n\n[TestFixture]\npublic class UntitledTest\n{\n    public void TestOneCellDiesAfterEvolution() {\n        Game game = new Game(5,5, new List<string>() {\"0,0\"});\n\n        game.Evolve();\n\n        Assert.AreEqual(0, game.LiveCellsCount());\n    }\n}\n\n", :caret_pos=>"24", :scroll_top=>"0"}, "instructions"=>{:scroll_left=>"0", :content=>"Your task is to write a program to calculate the next\ngeneration of Conway's game of life, given any starting\nposition. You start with a two dimensional grid of cells, \nwhere each cell is either alive or dead. The grid is finite, \nand no life can exist off the edges. When calculating the \nnext generation of the grid, follow these four rules:\n\n1. Any live cell with fewer than two live neighbours dies, \n   as if caused by underpopulation.\n2. Any live cell with more than three live neighbours dies, \n   as if by overcrowding.\n3. Any live cell with two or three live neighbours lives \n   on to the next generation.\n4. Any dead cell with exactly three live neighbours becomes \n   a live cell.\n\nExamples: * indicates live cell, . indicates dead cell\n\nExample input: (4 x 8 grid)\n4 8\n........\n....*...\n...**...\n........\n\nExample output:\n4 8\n........\n...**...\n...**...\n........\n\n", :caret_pos=>"0", :scroll_top=>"0"}}, :output=>"Untitled.cs(5,17): warning CS0649: Field `Game.xBound' is never assigned to, and will always have its default value `0'\nUntitled.cs(6,17): warning CS0649: Field `Game.yBound' is never assigned to, and will always have its default value `0'\nCompilation succeeded - 2 warning(s)\n\nTests run: 0, Failures: 0, Not run: 0, Time: 0.015 seconds\r\n\r\n\r\n", :current_filename=>"output"}
